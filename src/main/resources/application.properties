server.port = 8081

#spring.datasource.url=jdbc:mysql://localhost:3306/reservation?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=password

spring.datasource.url=jdbc:mysql://reservation.c6rzo0wb145k.us-east-2.rds.amazonaws.com:3306/reservation?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.connectionTimeout=5000


#server.servlet.context-path=/cloudproject


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update


com.cloudproject.FlightTicketReservationSystem.itinerary.dirpath=/home/ec2-user/
com.cloudproject.FlightTicketReservationSystem.itinerary.email.subject=Itinerary for your Flight
com.cloudproject.FlightTicketReservationSystem.itinerary.email.body=Please find your Itinerary attached.


spring.mail.host= smtp.gmail.com
spring.mail.port= 587
spring.mail.username= reservation8440@gmail.com
spring.mail.password= vvdphgejwhfraypw
spring.mail.properties.mail.smtp.auth= true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

## Thymeleaf dev testing
spring.thymeleaf.cache=false

server.servlet.context-path=/flightreservation
